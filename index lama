<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>GlowCare — Toko Skincare</title>
  <style>
    :root{
      --cream:#FFF8E7;
      --cream-2:#FDF3D7;
      --white:#FFFFFF;
      --maroon:#7B1E3C; /* merah marun */
      --maroon-2:#A63A50; /* sedikit lebih terang untuk hover */
      --ink:#2E2A2A;
      --muted:#7A6F6F;
      --success:#2fb380;
      --shadow:0 10px 25px rgba(0,0,0,.08);
      --radius:18px;
    }

    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0;
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji";
      color:var(--ink);
      background:linear-gradient(180deg,var(--cream), var(--cream-2));
      letter-spacing:.2px;
    }

    /* ====== Header / Navbar ====== */
    .nav{
      position:sticky; top:0; z-index:50;
      backdrop-filter:saturate(1.2) blur(8px);
      background:color-mix(in srgb, var(--cream) 80%, white 20%);
      border-bottom:1px solid rgba(123,30,60,.08);
    }
    .nav-inner{
      max-width:1200px; margin:0 auto; padding:14px 18px;
      display:grid; grid-template-columns:1fr auto 1fr; align-items:center; gap:12px;
    }
    .brand{ display:flex; align-items:center; gap:12px; }
    .logo{ width:38px; height:38px; border-radius:50%; background:radial-gradient(circle at 30% 30%, var(--maroon), var(--maroon-2)); box-shadow:inset 0 0 0 6px rgba(255,255,255,.7); }
    .brand h1{ font-size:1.15rem; margin:0; letter-spacing:1px; }
    .search{ display:flex; align-items:center; gap:10px; justify-self:center; }
    .search input{
      width:min(58vw,520px); padding:12px 16px; border-radius:999px; border:1px solid rgba(0,0,0,.06);
      background:var(--white); outline:none; box-shadow:var(--shadow);
    }
    .nav-actions{ justify-self:end; display:flex; align-items:center; gap:8px; }
    .icon-btn{ border:none; background:var(--white); border-radius:999px; padding:10px 12px; box-shadow:var(--shadow); cursor:pointer; transition:transform .2s ease; }
    .icon-btn:hover{ transform:translateY(-2px) }
    .cart-count{ font-size:.75rem; background:var(--maroon); color:white; padding:2px 7px; border-radius:999px; margin-left:6px; }

    /* ====== Hero ====== */
    .hero{
      max-width:1200px; margin:18px auto 0; padding:16px 18px 6px;
      display:grid; grid-template-columns:1.3fr .7fr; gap:18px; align-items:center;
    }
    .hero-card{
      background:linear-gradient(135deg, var(--white), #fffaf1);
      border-radius:var(--radius);
      box-shadow:var(--shadow);
      padding:28px; position:relative; overflow:hidden;
      isolation:isolate;
    }
    .hero-card h2{ margin:0 0 8px; font-size:2rem; letter-spacing:.5px}
    .hero-card p{ margin:0; color:var(--muted)}
    .hero-badge{ position:absolute; right:18px; top:18px; background:var(--maroon); color:white; padding:8px 12px; border-radius:999px; font-size:.85rem; box-shadow:0 8px 20px rgba(123,30,60,.35); }
    .bubbles{ position:absolute; inset: -30% -20% auto auto; width:420px; height:420px; filter:blur(12px); opacity:.28; z-index:-1; }
    .bubble{ position:absolute; border-radius:50%; background:radial-gradient(circle at 30% 30%, var(--maroon-2), var(--maroon)); animation:float 10s ease-in-out infinite; }
    .bubble.b1{ width:240px; height:240px; right:10%; top:-12% }
    .bubble.b2{ width:160px; height:160px; right:40%; top:16%; animation-duration:12s }
    .bubble.b3{ width:120px; height:120px; right:0%; top:40%; animation-duration:14s }
    @keyframes float{ 0%,100%{ transform:translateY(0)} 50%{ transform:translateY(-14px) } }

    .hero-cta{ display:flex; gap:12px; margin-top:16px }
    .btn{
      border:none; border-radius:14px; padding:12px 16px; cursor:pointer; box-shadow:var(--shadow);
      background:var(--maroon); color:white; transition:transform .15s ease, background .25s ease, box-shadow .25s ease;
    }
    .btn.secondary{ background:var(--white); color:var(--maroon); border:1px solid rgba(123,30,60,.18); }
    .btn:hover{ transform:translateY(-2px); filter:saturate(1.1) }

    /* ====== Filters Bar ====== */
    .filters{
      max-width:1200px; margin:14px auto; padding:0 18px 6px;
      display:grid; grid-template-columns:1fr; gap:10px;
    }
    .filter-row{
      background:var(--white); border-radius:var(--radius); box-shadow:var(--shadow); padding:14px; display:grid; grid-template-columns:repeat(12,1fr); gap:10px; align-items:center;
    }
    .filter-group{ grid-column:span 3; display:flex; align-items:center; gap:8px; flex-wrap:wrap; }
    .filter-group label{ font-size:.9rem; color:var(--muted) }
    .chips{ display:flex; gap:8px; flex-wrap:wrap; }
    .chip{ background:#fff7ef; border:1px solid #ffe2c6; padding:8px 10px; border-radius:999px; font-size:.9rem; cursor:pointer; transition:all .2s; }
    .chip.active, .chip:hover{ background:var(--maroon); color:white; border-color:transparent }
    .range input{ width:160px }
    .sort{ justify-self:end; }

    /* ====== Product Grid ====== */
    .wrap{ max-width:1200px; margin:6px auto 70px; padding:0 18px; }
    .grid{ display:grid; grid-template-columns: repeat(12, 1fr); gap:16px; }
    .card{ grid-column: span 3; background:var(--white); border-radius:var(--radius); box-shadow:var(--shadow); overflow:hidden; display:flex; flex-direction:column; transition: transform .2s ease, box-shadow .2s ease; position:relative; }
    .card:hover{ transform: translateY(-6px); box-shadow:0 18px 40px rgba(0,0,0,.12) }
    .img{
      width:100%; aspect-ratio: 4/3; background:#fff1e0; display:grid; place-items:center; position:relative; overflow:hidden;
    }
    .badge{ position:absolute; left:12px; top:12px; background:var(--maroon); color:white; border-radius:999px; padding:6px 10px; font-size:.75rem; box-shadow:0 10px 18px rgba(123,30,60,.35) }
    .svg{ width:48%; max-width:180px; }
    .content{ padding:14px 16px 12px; display:flex; flex-direction:column; gap:8px; }
    .title{ font-weight:700; letter-spacing:.2px }
    .meta{ font-size:.9rem; color:var(--muted); display:flex; gap:10px; flex-wrap:wrap; }
    .price{ font-weight:800; font-size:1.05rem }
    .stars{ font-size:.9rem; color:#f1b84b }
    .actions{ display:flex; gap:10px; align-items:center; margin-top:2px }
    .qty{ display:flex; align-items:center; gap:6px; }
    .qty button{ width:28px; height:28px; border-radius:8px; border:1px solid rgba(0,0,0,.08); background:var(--white); cursor:pointer }
    .add{ margin-left:auto }

    /* ====== Mini Cart ====== */
    .mini-cart{
      position:fixed; right:16px; bottom:16px; width:min(380px, 92vw);
      background:var(--white); border:1px solid rgba(0,0,0,.06); box-shadow:0 20px 50px rgba(0,0,0,.18);
      border-radius:20px; overflow:hidden; transform:translateY(140%); transition: transform .35s ease; z-index:60;
    }
    .mini-cart.show{ transform:translateY(0) }
    .mc-header{ display:flex; align-items:center; justify-content:space-between; padding:12px 14px; background:linear-gradient(180deg, #fff, #fff6ec); border-bottom:1px solid rgba(0,0,0,.06) }
    .mc-body{ max-height:50vh; overflow:auto }
    .mc-item{ display:grid; grid-template-columns:48px 1fr auto; gap:10px; align-items:center; padding:10px 14px; border-bottom:1px dashed #eee; }
    .mc-thumb{ width:48px; height:48px; border-radius:10px; background:#fff1e0; display:grid; place-items:center }
    .mc-foot{ padding:12px 14px; display:grid; gap:10px; border-top:1px solid #f1e6d4 }

    /* ====== Toast ====== */
    .toast{
      position:fixed; left:50%; top:16px; transform:translate(-50%,-120%);
      background:var(--maroon); color:white; padding:10px 14px; border-radius:999px; box-shadow:0 18px 44px rgba(123,30,60,.5);
      transition: transform .4s ease; z-index:80; font-size:.95rem;
    }
    .toast.show{ transform:translate(-50%,0) }

    /* ====== Footer ====== */
    footer{ max-width:1200px; margin:30px auto; padding:0 18px 40px; color:var(--muted); font-size:.9rem }
    .foot-card{ background:var(--white); border-radius:var(--radius); padding:18px; box-shadow:var(--shadow) }

    /* ====== Responsive ====== */
    @media (max-width: 1100px){ .card{ grid-column: span 4 } }
    @media (max-width: 780px){
      .hero{ grid-template-columns:1fr; }
      .filter-row{ grid-template-columns:1fr; }
      .filter-group{ grid-column:span 12 }
      .sort{ justify-self:start }
      .card{ grid-column: span 6 }
    }
    @media (max-width: 540px){ .card{ grid-column: span 12 } }
  </style>
</head>
<body>
  <nav class="nav">
    <div class="nav-inner">
      <div class="brand">
        <div class="logo" aria-hidden="true"></div>
        <h1>GlowCare</h1>
      </div>
      <div class="search" role="search">
        <input id="searchInput" type="search" placeholder="Cari serum, toner, sunscreen…" aria-label="Cari produk" />
      </div>
      <div class="nav-actions">
        <button class="icon-btn" id="themeBtn" title="Ganti tema">🌓</button>
        <button class="icon-btn" id="cartBtn" title="Buka keranjang">🛒 <span class="cart-count" id="cartCount">0</span></button>
      </div>
    </div>
  </nav>

  <section class="hero">
    <div class="hero-card">
      <span class="hero-badge">Diskon Musim Panas ✨</span>
      <h2>Rawat kulitmu dengan pilihan skincare terbaik</h2>
      <p>Kurasi produk cleanser, toner, serum, hingga sunscreen untuk semua jenis kulit. Bebas paraben & cruelty-free.</p>
      <div class="hero-cta">
        <button class="btn" id="shopNow">Belanja Sekarang</button>
        <button class="btn secondary" id="bestSellers">Lihat Best Seller</button>
      </div>
      <div class="bubbles" aria-hidden="true">
        <div class="bubble b1"></div>
        <div class="bubble b2"></div>
        <div class="bubble b3"></div>
      </div>
    </div>
    <div class="hero-card" style="display:grid; place-items:center">
      <div style="text-align:center">
        <svg width="220" height="220" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <defs>
            <linearGradient id="g" x1="0" x2="1" y1="0" y2="1">
              <stop offset="0%" stop-color="#fff"/>
              <stop offset="100%" stop-color="#fff2df"/>
            </linearGradient>
          </defs>
          <rect x="0" y="0" width="200" height="200" rx="24" fill="url(#g)" stroke="#f3e2c7" />
          <g transform="translate(70,24)">
            <rect x="0" y="20" width="60" height="120" rx="14" fill="#7B1E3C" opacity=".12"/>
            <rect x="2" y="22" width="56" height="116" rx="12" fill="#fff" stroke="#f0e1cf"/>
            <rect x="10" y="32" width="40" height="10" rx="6" fill="#ffe6d1"/>
            <rect x="10" y="52" width="40" height="70" rx="10" fill="#fff5ea" stroke="#ffe6d1"/>
          </g>
        </svg>
        <p style="margin:10px 0 0; color:var(--muted)">Pengiriman cepat • Garansi original • CS ramah</p>
      </div>
    </div>
  </section>

  <section class="filters">
    <div class="filter-row">
      <div class="filter-group">
        <label>Kategori:</label>
        <div class="chips" id="categoryChips"></div>
      </div>
      <div class="filter-group">
        <label>Jenis Kulit:</label>
        <div class="chips" id="skinChips"></div>
      </div>
      <div class="filter-group range">
        <label>Harga (Rp):</label>
        <input type="range" id="priceRange" min="30000" max="350000" step="10000" />
        <span id="priceLabel" class="muted"></span>
      </div>
      <div class="filter-group sort">
        <label for="sortSelect" class="sr-only">Urutkan</label>
        <select id="sortSelect" style="padding:10px 12px; border-radius:12px; border:1px solid #ecd8c2; background:#fff">
          <option value="popular">Terpopuler</option>
          <option value="price-asc">Harga: Rendah → Tinggi</option>
          <option value="price-desc">Harga: Tinggi → Rendah</option>
          <option value="rating">Rating Tertinggi</option>
        </select>
      </div>
    </div>
  </section>

  <main class="wrap">
    <div class="grid" id="productGrid"></div>
  </main>

  <div class="mini-cart" id="miniCart" aria-live="polite">
    <div class="mc-header">
      <strong>Keranjang</strong>
      <button class="icon-btn" id="closeCart">✕</button>
    </div>
    <div class="mc-body" id="cartItems"></div>
    <div class="mc-foot">
      <div style="display:flex; justify-content:space-between; align-items:center">
        <span>Total</span>
        <strong id="cartTotal">Rp0</strong>
      </div>
      <button class="btn" id="checkoutBtn">Checkout</button>
    </div>
  </div>

  <div class="toast" id="toast">Ditambahkan ke keranjang</div>

  <footer>
    <div class="foot-card">
      <strong>Tips singkat:</strong> gunakan pencarian di atas, filter kategori & jenis kulit, atur rentang harga, lalu tambah ke keranjang. Scroll untuk animasi muncul halus ✨
    </div>
  </footer>

  <script>
    // ====== Dummy product data (dengan SVG inline agar ringan & konsisten warna) ======
    const bottle = (color="#7B1E3C") => `data:image/svg+xml;utf8,
      <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 120 140'>
        <defs>
          <linearGradient id='g' x1='0' x2='1' y1='0' y2='1'>
            <stop offset='0%' stop-color='%23fff' />
            <stop offset='100%' stop-color='%23fff2df' />
          </linearGradient>
        </defs>
        <rect x='15' y='20' rx='12' width='90' height='110' fill='url(%23g)' stroke='%23f0e1cf'/>
        <rect x='20' y='25' rx='9'  width='80' height='24'  fill='%23ffe6d1'/>
        <rect x='35' y='8'  rx='6'  width='50' height='18'  fill='${encodeURIComponent(color)}'/>
        <rect x='28' y='56' rx='10' width='64' height='62'  fill='%23fff9f0' stroke='%23ffe6d1'/>
      </svg>`;

    const categories = ["Cleanser","Toner","Serum","Moisturizer","Sunscreen","Mask"];
    const skinTypes = ["Normal","Kering","Berminyak","Kombinasi","Sensitif"];

    const products = [
      {id:1, name:"Gentle Foam Cleanser", category:"Cleanser", price:68000, rating:4.6, skin:["Normal","Kering","Kombinasi"], tag:"Baru", img:bottle()},
      {id:2, name:"Hydra Balance Toner", category:"Toner", price:75000, rating:4.7, skin:["Normal","Kombinasi","Sensitif"], tag:"Best Seller", img:bottle("#A63A50")},
      {id:3, name:"Vit C Bright Serum", category:"Serum", price:145000, rating:4.8, skin:["Normal","Kering","Kombinasi"], tag:"-10%", img:bottle()},
      {id:4, name:"BHA Pore Serum", category:"Serum", price:138000, rating:4.5, skin:["Berminyak","Kombinasi"], tag:"Promo", img:bottle("#8F2242")},
      {id:5, name:"Ceramide Moist Cream", category:"Moisturizer", price:120000, rating:4.7, skin:["Kering","Sensitif"], tag:"Lembut", img:bottle()},
      {id:6, name:"Gel Moist Light", category:"Moisturizer", price:99000, rating:4.4, skin:["Berminyak","Kombinasi"], tag:"Ringan", img:bottle("#A63A50")},
      {id:7, name:"Daily Shield SPF50+", category:"Sunscreen", price:135000, rating:4.9, skin:["Semua"], tag:"Wajib!", img:bottle()},
      {id:8, name:"Mineral Sun Cream", category:"Sunscreen", price:155000, rating:4.6, skin:["Sensitif","Normal"], tag:"Mineral", img:bottle("#8F2242")},
      {id:9, name:"Soothing Toner Cica", category:"Toner", price:88000, rating:4.5, skin:["Sensitif","Kering"], tag:"Baru", img:bottle()},
      {id:10,name:"HA Hydrating Serum", category:"Serum", price:132000, rating:4.7, skin:["Kering","Sensitif"], tag:"Lembap", img:bottle("#A63A50")},
      {id:11,name:"Overnight Repair Mask", category:"Mask", price:110000, rating:4.3, skin:["Normal","Kering"], tag:"Malam", img:bottle()},
      {id:12,name:"Clay Detox Mask", category:"Mask", price:105000, rating:4.2, skin:["Berminyak","Kombinasi"], tag:"Detox", img:bottle("#8F2242")},
    ];

    // ====== Elements ======
    const grid = document.getElementById('productGrid');
    const searchInput = document.getElementById('searchInput');
    const sortSelect = document.getElementById('sortSelect');
    const cartBtn = document.getElementById('cartBtn');
    const miniCart = document.getElementById('miniCart');
    const closeCart = document.getElementById('closeCart');
    const cartItems = document.getElementById('cartItems');
    const cartTotal = document.getElementById('cartTotal');
    const cartCount = document.getElementById('cartCount');
    const toast = document.getElementById('toast');
    const priceRange = document.getElementById('priceRange');
    const priceLabel = document.getElementById('priceLabel');
    const themeBtn = document.getElementById('themeBtn');

    // ====== Build chips ======
    const catWrap = document.getElementById('categoryChips');
    const skinWrap = document.getElementById('skinChips');
    let activeCats = new Set();
    let activeSkins = new Set();

    const chip = (text, group) => {
      const el = document.createElement('button');
      el.className = 'chip';
      el.textContent = text;
      el.setAttribute('aria-pressed','false');
      el.addEventListener('click', () => {
        const set = group === 'cat' ? activeCats : activeSkins;
        if(set.has(text)) { set.delete(text); el.classList.remove('active'); el.setAttribute('aria-pressed','false'); }
        else { set.add(text); el.classList.add('active'); el.setAttribute('aria-pressed','true'); }
        render();
      });
      return el;
    };

    categories.forEach(c => catWrap.appendChild(chip(c,'cat')));
    skinTypes.forEach(s => skinWrap.appendChild(chip(s,'skin')));

    // ====== Price range label ======
    const formatIDR = n => n.toLocaleString('id-ID');
    priceRange.value = 350000; // default max
    priceLabel.textContent = `≤ Rp${formatIDR(+priceRange.value)}`;
    priceRange.addEventListener('input', ()=>{
      priceLabel.textContent = `≤ Rp${formatIDR(+priceRange.value)}`;
      render();
    });

    // ====== Search & sort ======
    searchInput.addEventListener('input', render);
    sortSelect.addEventListener('change', render);

    // ====== Cart (localStorage) ======
    const CART_KEY = 'glowcare_cart_v1';
    const loadCart = () => JSON.parse(localStorage.getItem(CART_KEY) || '{}');
    const saveCart = (c) => localStorage.setItem(CART_KEY, JSON.stringify(c));
    let cart = loadCart();

    const updateCartUI = () => {
      cartItems.innerHTML = '';
      let total = 0; let count = 0;
      Object.values(cart).forEach(item => {
        total += item.price * item.qty; count += item.qty;
        const row = document.createElement('div');
        row.className = 'mc-item';
        row.innerHTML = `
          <div class="mc-thumb"><img alt="${item.name}" src="${item.img}" width="28" height="28"/></div>
          <div>
            <div style="font-weight:600">${item.name}</div>
            <div style="font-size:.9rem; color:var(--muted)">Rp${formatIDR(item.price)} × ${item.qty}</div>
          </div>
          <div style="display:flex; gap:6px; align-items:center">
            <button class="icon-btn" aria-label="Kurangi" data-act="dec" data-id="${item.id}">–</button>
            <button class="icon-btn" aria-label="Tambah" data-act="inc" data-id="${item.id}">+</button>
            <button class="icon-btn" aria-label="Hapus" data-act="del" data-id="${item.id}">🗑️</button>
          </div>`;
        cartItems.appendChild(row);
      });
      cartTotal.textContent = 'Rp' + formatIDR(total);
      cartCount.textContent = count;
    };

    cartItems.addEventListener('click', (e)=>{
      const btn = e.target.closest('button'); if(!btn) return;
      const id = btn.getAttribute('data-id'); const act = btn.getAttribute('data-act');
      const item = cart[id]; if(!item) return;
      if(act==='inc') item.qty++;
      if(act==='dec') item.qty = Math.max(1, item.qty-1);
      if(act==='del') delete cart[id];
      saveCart(cart); updateCartUI();
    });

    const addToCart = (p, qty=1) => {
      if(!cart[p.id]) cart[p.id] = { ...p, qty };
      else cart[p.id].qty += qty;
      saveCart(cart); updateCartUI();
      showToast('Ditambahkan ke keranjang');
    };

    cartBtn.addEventListener('click', ()=> miniCart.classList.toggle('show'));
    document.getElementById('closeCart').addEventListener('click', ()=> miniCart.classList.remove('show'));

    // ====== Theme toggle (light/cream default vs. maroon accent) ======
    themeBtn.addEventListener('click', ()=>{
      const root = document.documentElement;
      const curr = getComputedStyle(root).getPropertyValue('--cream').trim();
      if(curr === '#FFF8E7'){
        root.style.setProperty('--cream', '#fffaf4');
        root.style.setProperty('--cream-2', '#fff5ea');
        showToast('Tema: Soft Cream');
      } else {
        root.style.setProperty('--cream', '#FFF8E7');
        root.style.setProperty('--cream-2', '#FDF3D7');
        showToast('Tema: Cream Default');
      }
    });

    // ====== Render products ======
    const starStr = r => '★★★★★☆☆☆☆☆'.slice(5 - Math.round(r)) // helper visual
    const inView = new IntersectionObserver((entries)=>{
      entries.forEach(en => {
        if(en.isIntersecting){ en.target.animate([
          { transform:'translateY(18px)', opacity:.0 },
          { transform:'translateY(0)', opacity:1 }
        ], { duration:420, easing:'cubic-bezier(.2,.7,.2,1)', fill:'forwards' });
          inView.unobserve(en.target);
        }
      })
    }, { threshold:.12 });

    function makeCard(p){
      const el = document.createElement('article');
      el.className = 'card';
      el.innerHTML = `
        <div class="img">
          <img class="svg" src="${p.img}" alt="${p.name}"/>
          <span class="badge">${p.tag}</span>
        </div>
        <div class="content">
          <div class="title">${p.name}</div>
          <div class="meta">
            <span>${p.category}</span>
            <span>•</span>
            <span>${p.skin.join(', ')}</span>
          </div>
          <div class="meta"><span class="stars" aria-label="Rating ${p.rating}">★</span>&nbsp;${p.rating.toFixed(1)}</div>
          <div class="actions">
            <span class="price">Rp${formatIDR(p.price)}</span>
            <div class="qty" aria-label="Jumlah">
              <button data-q="-1" aria-label="Kurangi">–</button>
              <span>1</span>
              <button data-q="1" aria-label="Tambah">+</button>
            </div>
            <button class="btn add">Tambah</button>
          </div>
        </div>`;

      // Qty controls
      const qtyWrap = el.querySelector('.qty');
      let qty = 1;
      qtyWrap.addEventListener('click', (e)=>{
        const q = +e.target.getAttribute('data-q');
        if(!q) return; qty = Math.max(1, qty + q); qtyWrap.querySelector('span').textContent = qty;
      });

      // Add to cart
      el.querySelector('.add').addEventListener('click', ()=> addToCart(p, qty));

      inView.observe(el);
      return el;
    }

    function filterAndSort(){
      const term = searchInput.value.trim().toLowerCase();
      const maxPrice = +priceRange.value;
      const catSet = activeCats; const skinSet = activeSkins;
      let arr = products.filter(p =>
        (!term || p.name.toLowerCase().includes(term)) &&
        (p.price <= maxPrice) &&
        (catSet.size === 0 || catSet.has(p.category)) &&
        (skinSet.size === 0 || p.skin.some(s => skinSet.has(s) || s === 'Semua'))
      );
      switch (sortSelect.value){
        case 'price-asc': arr.sort((a,b)=>a.price-b.price); break;
        case 'price-desc': arr.sort((a,b)=>b.price-a.price); break;
        case 'rating': arr.sort((a,b)=>b.rating-a.rating); break;
        default: arr.sort((a,b)=> b.rating*5 + (200000-b.price) - (a.rating*5 + (200000-a.price)) );
      }
      return arr;
    }

    function render(){
      grid.innerHTML = '';
      const arr = filterAndSort();
      if(arr.length === 0){
        const empty = document.createElement('div');
        empty.style.cssText = 'grid-column:1/-1; text-align:center; padding:40px; background:#fff; border-radius:18px; box-shadow:var(--shadow)';
        empty.innerHTML = 'Tidak ada produk yang cocok. Coba ubah filter.';
        grid.appendChild(empty);
        return;
      }
      arr.forEach(p => grid.appendChild(makeCard(p)));
    }

    // ====== Toast ======
    let toastTimer;
    function showToast(text){
      toast.textContent = text || 'Berhasil';
      toast.classList.add('show');
      clearTimeout(toastTimer);
      toastTimer = setTimeout(()=> toast.classList.remove('show'), 1400);
    }

    // ====== Buttons in hero ======
    document.getElementById('shopNow').addEventListener('click', ()=>{
      window.scrollTo({ top: document.querySelector('.filters').offsetTop - 12, behavior:'smooth' });
      showToast('Selamat berbelanja ✨');
    });
    document.getElementById('bestSellers').addEventListener('click', ()=>{
      activeCats = new Set(['Serum','Sunscreen']);
      document.querySelectorAll('#categoryChips .chip').forEach(ch => {
        ch.classList.toggle('active', activeCats.has(ch.textContent));
      });
      render();
      window.scrollTo({ top: document.querySelector('.wrap').offsetTop - 12, behavior:'smooth' });
    });

    // ====== Init ======
    updateCartUI();
    render();
  </script>
</body>
</html>
